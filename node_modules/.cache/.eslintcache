[{"/Users/psh/Coding/Learning_React/react-app/src/index.js":"1","/Users/psh/Coding/Learning_React/react-app/src/reportWebVitals.js":"2","/Users/psh/Coding/Learning_React/react-app/src/App.js":"3"},{"size":535,"mtime":1676797589660,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1676796278991,"results":"6","hashOfConfig":"5"},{"size":4931,"mtime":1676895155763,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1stpunw",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"/Users/psh/Coding/Learning_React/react-app/src/index.js",[],[],"/Users/psh/Coding/Learning_React/react-app/src/reportWebVitals.js",[],[],"/Users/psh/Coding/Learning_React/react-app/src/App.js",["18"],[],"import logo from './logo.svg';\nimport './App.css';\nimport {useState} from 'react';\n\nfunction Header(props){\n  return (\n    <header>\n      <h1><a href='/' onClick={(event)=>{\n        event.preventDefault(); //reload 방지\n        props.onChangeMode();\n      }}>{props.title}</a></h1>\n    </header>\n  );\n}\nfunction Nav(props){\n  const lis = [];\n  for(let i=0; i < props.topics.length; i++){\n    let t = props.topics[i];\n    lis.push(<li key={t.id}>\n      <a id={t.id} href={'/read/' + t.id} onClick={(event)=>{\n      event.preventDefault();\n      props.onChangeMode(Number(event.target.id));\n    }}>{t.title}</a></li>)\n  }\n  return (\n    <nav>\n      <ol>\n        {lis}\n      </ol>\n    </nav>\n  );\n}\nfunction Article(props){\n  return (\n    <article>\n      <h2>{props.title}</h2>\n      {props.body}\n    </article>\n  );\n}\nfunction Create(props){\n  return (\n    <article>\n      <h2>Create</h2>\n      <form onSubmit={event=>{\n        event.preventDefault();\n        const title = event.target.title.value;\n        const body = event.target.body.value;\n        props.onCreate(title, body);\n      }}>\n        <p><input type=\"text\" name=\"title\" placeholder='title'></input></p>\n        <p><textarea name='body' placeholder='body'></textarea></p>\n        <p><input type='submit' value='Create'></input></p>\n      </form>\n    </article>\n  );\n}\nfunction Update(props){\n  const [title, setTitle] = useState(props.title);\n  const [body, setBody] = useState(props.body);\n  return (\n    <article>\n      <h2>Update</h2>\n      <form onSubmit={event=>{\n        event.preventDefault();\n        const title = event.target.title.value;\n        const body = event.target.body.value;\n        props.onUpdate(title, body);\n      }}>\n        <p><input type=\"text\" name=\"title\" placeholder='title' value={title} \n          onChange={event=>{\n            setTitle(event.target.value);\n        }}></input></p>\n        <p><textarea name='body' placeholder='body' value={body}\n          onChange={event=>{\n            setBody(event.target.value);\n        }}></textarea></p>\n        <p><input type='submit' value='Update'></input></p>\n      </form>\n    </article>\n  );\n}\n\nfunction App() {\n  // const _mode = useState('WELCOME');\n  // const mode = _mode[0];\n  // const setMode = _mode[1];\n  const [mode, setMode] = useState('WELCOME');\n  const [id, setId] = useState(null);\n  const [nextId, setNextId] = useState(4);\n  const [topics, setTopics] = useState([\n    {id:1,title:'html', body:'html is ...'},\n    {id:2, title:'css', body:'css is ...'},\n    {id:3, title:'javascript' , body:'javascript is ...'}\n  ]);\n\n  let content = null;\n  let contextControl = null;\n\n  if(mode === 'WELCOME'){\n    content = <Article title=\"Welcome\" body=\"Hello, WEB\"></Article>;\n  }\n  else if(mode === 'READ'){\n    let title, body = null;\n    for(let i=0; i<topics.length; i++){\n      if(topics[i].id === id){\n        title = topics[i].title;\n        body = topics[i].body;\n        break;\n      }\n    }\n  \n    content = <Article title={title} body={body}></Article>;\n    contextControl = <>\n    <li><a href={'/update'+id} onClick={event=>{\n      event.preventDefault();\n      setMode('UPDATE');\n    }}>Update</a> </li>\n    <li><input type=\"button\" value=\"Delete\" onClick={()=>{\n        const newTopics = [];\n        for(let i=0; i < topics.length; i++){\n          if(topics[i].id !== id){\n            newTopics.push(topics[i]);\n          }\n        }\n        setTopics(newTopics);\n        setMode('WELCOME');\n    }}  /></li>\n    </>\n  }\n  else if(mode === 'CREATE'){\n    content = <Create onCreate={(_title, _body)=>{\n      const newTopic = {id:nextId, title:_title,body:_body};\n      const newTopics = [...topics];\n      newTopics.push(newTopic);\n      setTopics(newTopics);\n      setMode('READ');\n      setId(nextId);\n      setNextId(nextId + 1);\n      \n    }}></Create>;\n  }\n  else if(mode === 'UPDATE'){\n    let title, body = null;\n    for(let i=0; i<topics.length; i++){\n      if(topics[i].id === id){\n        title = topics[i].title;\n        body = topics[i].body;\n        break;\n      }\n    }\n    content = <Update title={title} body={body} onUpdate={(title, body)=>{\n      const updatedTopic = {id:id, title:title, body:body};\n      const newTopics = [...topics];\n      for(let i=0; i < newTopics.length; i++){\n        if(newTopics[i].id === id){\n          newTopics[i] = updatedTopic;\n        }\n      }\n      setTopics(newTopics);\n      setMode('READ');\n    }}></Update>;\n  }\n\n  return (\n    <div className=\"App\">\n      <Header title=\"WEB\" onChangeMode={()=>{\n        setMode('WELCOME');\n      }}></Header>\n\n      <Nav topics={topics} onChangeMode={(_id)=>{\n        setMode('READ');\n        setId(_id);\n      }}></Nav>\n\n      {content}\n\n      <ul>\n        <li><a href='/create' onClick={(event)=>{\n          event.preventDefault();\n          setMode('CREATE');\n        }}>Create</a></li>\n        {contextControl /*UPDATE*/}\n\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n\n",{"ruleId":"19","severity":1,"message":"20","line":1,"column":8,"nodeType":"21","messageId":"22","endLine":1,"endColumn":12},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar"]